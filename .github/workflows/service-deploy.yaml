name: Polybot Service Deployment

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  PolybotBuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Build and push image
        run: |
          cd polybot
          
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          IMAGE_NAME=hemla/polybot:${{ github.run_number }}
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  Yolo5Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Build and push image
        run: |
          cd yolo5
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          IMAGE_NAME=hemla/yolo5:${{ github.run_number }}
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  Deploy:
    name: Deploy Docker compose project
    runs-on: ubuntu-latest
    needs:
      - PolybotBuild
      - Yolo5Build

    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Fetch EC2 instance IP
        id: fetch-ec2-ip
        run: |
          EC2_PUBLIC_IP=$(aws ec2 describe-instances --filters "Name=instance-state-name,Values=running" --query "Reservations[*].Instances[*].PublicIpAddress" --output text --region ${{ env.AWS_REGION }} | head -n 1)
          echo "EC2_PUBLIC_IP=${EC2_PUBLIC_IP}"
          echo "::set-output name=ec2_public_ip::$EC2_PUBLIC_IP"

      - name: Debug EC2 IP
        run: echo "Fetched EC2 Public IP: ${{ steps.fetch-ec2-ip.outputs.ec2_public_ip }}"

      - name: Copy Compose files to the EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ steps.fetch-ec2-ip.outputs.ec2_public_ip }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: docker-compose.yaml
          target: PolybotService/

      - name: Update the Docker Compose project in the EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.fetch-ec2-ip.outputs.ec2_public_ip }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo apt update && sudo apt install jq -y
            cd PolybotService/
            echo "${{ secrets.TELEGRAM_BOT_TOKEN }}" > telegram_bot_token.secret
            NGROK_DOMAIN=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
            echo """
            POLYBOT_IMG_NAME=hemla/polybot:${{ github.run_number }}
            YOLO5_IMG_NAME=hemla/yolo5:${{ github.run_number }}
            TELEGRAM_APP_URL=$NGROK_DOMAIN
            """ > .env
            docker compose down
            docker compose up -d
